{"version":3,"sources":["../src/state.ts","../src/chain-config.ts","../src/index.ts"],"sourcesContent":["export class State {\n  stateMap = new Map<string, any>()\n\n  static INSTANCE = new State()\n\n  static reset() {\n    State.INSTANCE = new State()\n  }\n}\n\nexport abstract class StateStorage<T> {\n  // TODO learn how to define single instance for all subclasses\n\n  protected constructor() {\n    //\n  }\n\n  abstract initValue(): T\n\n  key(): string {\n    return this.constructor.name\n  }\n\n  getOrRegister(): T {\n    let metricState: T = State.INSTANCE.stateMap.get(this.key())\n    if (!metricState) {\n      metricState = this.initValue()\n      State.INSTANCE.stateMap.set(this.key(), metricState)\n    }\n    return metricState\n  }\n\n  unregister(): T {\n    const value = State.INSTANCE.stateMap.get(this.key())\n    State.INSTANCE.stateMap.delete(this.key())\n    return value\n  }\n}\n\nexport abstract class MapStateStorage<T> extends StateStorage<Map<string, T>> {\n  initValue() {\n    return new Map<string, T>()\n  }\n\n  getValue(key: string): T | undefined {\n    const m = this.getOrRegister()\n    return m.get(key)\n  }\n\n  getValues(): T[] {\n    const m = this.getOrRegister()\n    return Array.from(m.values())\n  }\n\n  getOrSetValue(key: string, value: T): T {\n    const m = this.getOrRegister()\n    const oldValue = m.get(key)\n    if (oldValue) {\n      console.warn(key, 'has been registered twice, use the previous one')\n      return oldValue\n    }\n    m.set(key, value)\n    return value\n  }\n}\n\nexport abstract class ListStateStorage<T> extends StateStorage<T[]> {\n  initValue() {\n    return []\n  }\n\n  getValues(): T[] {\n    return this.getOrRegister()\n  }\n\n  addValue(value: T): T {\n    const m = this.getOrRegister()\n    m.push(value)\n    return value\n  }\n}\n;process.stdout.write(\"\");","export interface ChainConfig {\n  ChainID: string\n  Https?: string[]\n  ChainServer?: string\n}\n;process.stdout.write(\"\");","export * from './plugin.js'\nexport * from './state.js'\nexport * from './utils.js'\nexport * from './endpoints.js'\nexport * from './chain-config.js'\nexport * from './service.js'\nexport { GLOBAL_CONFIG, type GlobalConfig } from './global-config.js'\nexport * from './db-context.js'\nexport * from './provider.js'\n;process.stdout.write(\"\");"],"mappings":";qIAAO,IAAMA,EAAN,KAAY,CACjB,SAAW,IAAI,IAIf,OAAO,OAAQ,CACbA,EAAM,SAAW,IAAIA,CACvB,CACF,EARaC,EAAND,EAGLE,EAHWD,EAGJ,WAAW,IAAID,GAOjB,IAAeG,EAAf,KAA+B,CAG1B,aAAc,CAExB,CAIA,KAAc,CACZ,OAAO,KAAK,YAAY,IAC1B,CAEA,eAAmB,CACjB,IAAIC,EAAiBH,EAAM,SAAS,SAAS,IAAI,KAAK,IAAI,CAAC,EAC3D,OAAKG,IACHA,EAAc,KAAK,UAAU,EAC7BH,EAAM,SAAS,SAAS,IAAI,KAAK,IAAI,EAAGG,CAAW,GAE9CA,CACT,CAEA,YAAgB,CACd,IAAMC,EAAQJ,EAAM,SAAS,SAAS,IAAI,KAAK,IAAI,CAAC,EACpD,OAAAA,EAAM,SAAS,SAAS,OAAO,KAAK,IAAI,CAAC,EAClCI,CACT,CACF,EAEsBC,EAAf,cAA0CH,CAA6B,CAC5E,WAAY,CACV,OAAO,IAAI,GACb,CAEA,SAASI,EAA4B,CAEnC,OADU,KAAK,cAAc,EACpB,IAAIA,CAAG,CAClB,CAEA,WAAiB,CACf,IAAMC,EAAI,KAAK,cAAc,EAC7B,OAAO,MAAM,KAAKA,EAAE,OAAO,CAAC,CAC9B,CAEA,cAAcD,EAAaF,EAAa,CACtC,IAAMG,EAAI,KAAK,cAAc,EACvBC,EAAWD,EAAE,IAAID,CAAG,EAC1B,OAAIE,GACF,QAAQ,KAAKF,EAAK,iDAAiD,EAC5DE,IAETD,EAAE,IAAID,EAAKF,CAAK,EACTA,EACT,CACF,EAEsBK,EAAf,cAA2CP,CAAkB,CAClE,WAAY,CACV,MAAO,CAAC,CACV,CAEA,WAAiB,CACf,OAAO,KAAK,cAAc,CAC5B,CAEA,SAASE,EAAa,CAEpB,OADU,KAAK,cAAc,EAC3B,KAAKA,CAAK,EACLA,CACT,CACF,EACC,QAAQ,OAAO,MAAM,EAAE,EC5EvB,QAAQ,OAAO,MAAM,EAAE,ECIvB,QAAQ,OAAO,MAAM,EAAE","names":["_State","State","__publicField","StateStorage","metricState","value","MapStateStorage","key","m","oldValue","ListStateStorage"]}