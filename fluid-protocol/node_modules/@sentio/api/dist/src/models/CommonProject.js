/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { CommonChannelFromJSON, CommonChannelToJSON, } from './CommonChannel.js';
import { CommonOwnerFromJSON, CommonOwnerToJSON, } from './CommonOwner.js';
import { CommonProjectProjectMemberFromJSON, CommonProjectProjectMemberToJSON, } from './CommonProjectProjectMember.js';
import { CommonProjectSupersetFromJSON, CommonProjectSupersetToJSON, } from './CommonProjectSuperset.js';
import { CommonProjectTypeFromJSON, CommonProjectTypeToJSON, } from './CommonProjectType.js';
import { CommonProjectViewFromJSON, CommonProjectViewToJSON, } from './CommonProjectView.js';
import { CommonProjectVisibilityFromJSON, CommonProjectVisibilityToJSON, } from './CommonProjectVisibility.js';
/**
 * Check if a given object implements the CommonProject interface.
 */
export function instanceOfCommonProject(value) {
    return true;
}
export function CommonProjectFromJSON(json) {
    return CommonProjectFromJSONTyped(json, false);
}
export function CommonProjectFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'] == null ? undefined : json['id'],
        'displayName': json['displayName'] == null ? undefined : json['displayName'],
        'description': json['description'] == null ? undefined : json['description'],
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
        'slug': json['slug'] == null ? undefined : json['slug'],
        'ownerId': json['ownerId'] == null ? undefined : json['ownerId'],
        'owner': json['owner'] == null ? undefined : CommonOwnerFromJSON(json['owner']),
        'visibility': json['visibility'] == null ? undefined : CommonProjectVisibilityFromJSON(json['visibility']),
        'type': json['type'] == null ? undefined : CommonProjectTypeFromJSON(json['type']),
        'members': json['members'] == null ? undefined : (json['members'].map(CommonProjectProjectMemberFromJSON)),
        'multiVersion': json['multiVersion'] == null ? undefined : json['multiVersion'],
        'ownerName': json['ownerName'] == null ? undefined : json['ownerName'],
        'notificationChannels': json['notificationChannels'] == null ? undefined : (json['notificationChannels'].map(CommonChannelFromJSON)),
        'views': json['views'] == null ? undefined : (json['views'].map(CommonProjectViewFromJSON)),
        'supersetEnable': json['supersetEnable'] == null ? undefined : json['supersetEnable'],
        'superset': json['superset'] == null ? undefined : CommonProjectSupersetFromJSON(json['superset']),
        'enableDisk': json['enableDisk'] == null ? undefined : json['enableDisk'],
        'enableMaterializedView': json['enableMaterializedView'] == null ? undefined : json['enableMaterializedView'],
    };
}
export function CommonProjectToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'displayName': value['displayName'],
        'description': value['description'],
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
        'slug': value['slug'],
        'ownerId': value['ownerId'],
        'owner': CommonOwnerToJSON(value['owner']),
        'visibility': CommonProjectVisibilityToJSON(value['visibility']),
        'type': CommonProjectTypeToJSON(value['type']),
        'members': value['members'] == null ? undefined : (value['members'].map(CommonProjectProjectMemberToJSON)),
        'multiVersion': value['multiVersion'],
        'ownerName': value['ownerName'],
        'notificationChannels': value['notificationChannels'] == null ? undefined : (value['notificationChannels'].map(CommonChannelToJSON)),
        'views': value['views'] == null ? undefined : (value['views'].map(CommonProjectViewToJSON)),
        'supersetEnable': value['supersetEnable'],
        'superset': CommonProjectSupersetToJSON(value['superset']),
        'enableDisk': value['enableDisk'],
        'enableMaterializedView': value['enableMaterializedView'],
    };
}
//# sourceMappingURL=CommonProject.js.map