/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime.js';
import type { PriceServiceBatchGetPricesResponse, PriceServiceCheckLatestPriceResponse, PriceServiceGetPriceResponse, PriceServiceListCoinsResponse } from '../models/index.js';
export interface BatchGetPricesRequest {
    timestamps?: Array<Date>;
}
export interface GetPriceRequest {
    timestamp?: Date;
    coinIdSymbol?: string;
    coinIdAddressAddress?: string;
    coinIdAddressChain?: string;
    source?: string;
}
export interface PriceListCoinsRequest {
    limit?: number;
    offset?: number;
    searchQuery?: string;
    chain?: string;
}
/**
 *
 */
export declare class PriceApi extends runtime.BaseAPI {
    /**
     * Batch get prices
     */
    batchGetPricesRaw(requestParameters: BatchGetPricesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PriceServiceBatchGetPricesResponse>>;
    /**
     * Batch get prices
     */
    batchGetPrices(requestParameters?: BatchGetPricesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PriceServiceBatchGetPricesResponse>;
    /**
     * Check latest price
     */
    checkLatestPriceRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PriceServiceCheckLatestPriceResponse>>;
    /**
     * Check latest price
     */
    checkLatestPrice(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PriceServiceCheckLatestPriceResponse>;
    /**
     * GetPrice returns the price of a given coin identifier, in a best effort way. If we do not have any price data for the given coin, we will return NOT_FOUND error. If we have at least one price data for the given coin, we will return it with the actual timestamp. Client is responsible for checking the timestamp and decide whether to use the price or not.
     * Get price
     */
    getPriceRaw(requestParameters: GetPriceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PriceServiceGetPriceResponse>>;
    /**
     * GetPrice returns the price of a given coin identifier, in a best effort way. If we do not have any price data for the given coin, we will return NOT_FOUND error. If we have at least one price data for the given coin, we will return it with the actual timestamp. Client is responsible for checking the timestamp and decide whether to use the price or not.
     * Get price
     */
    getPrice(requestParameters?: GetPriceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PriceServiceGetPriceResponse>;
    /**
     * List coins
     */
    priceListCoinsRaw(requestParameters: PriceListCoinsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PriceServiceListCoinsResponse>>;
    /**
     * List coins
     */
    priceListCoins(requestParameters?: PriceListCoinsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PriceServiceListCoinsResponse>;
}
