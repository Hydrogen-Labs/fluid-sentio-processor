/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime.js';
import type { WebServiceDashboard, WebServiceExportDashboardResponse, WebServiceGetDashboardResponse, WebServiceGetProjectListResponse, WebServiceGetProjectResponse, WebServiceImportDashboardRequest, WebServiceImportDashboardResponse } from '../models/index.js';
export interface DeleteDashboardRequest {
    dashboardId: string;
    projectId?: string;
    ownerName?: string;
    slug?: string;
}
export interface ExportDashboardRequest {
    dashboardId: string;
}
export interface GetDashboardRequest {
    dashboardId: string;
    projectId?: string;
    ownerName?: string;
    slug?: string;
}
export interface GetDashboard2Request {
    owner: string;
    slug: string;
    dashboardId: string;
    projectId?: string;
}
export interface GetProjectRequest {
    owner: string;
    slug: string;
}
export interface GetProjectListRequest {
    userId?: string;
    organizationId?: string;
}
export interface ImportDashboardRequest {
    body: WebServiceImportDashboardRequest;
}
export interface ListDashboardsRequest {
    dashboardId?: string;
    projectId?: string;
    ownerName?: string;
    slug?: string;
}
export interface ListDashboards2Request {
    owner: string;
    slug: string;
    dashboardId?: string;
    projectId?: string;
}
/**
 *
 */
export declare class WebApi extends runtime.BaseAPI {
    /**
     * Delete a dashboard by id
     */
    deleteDashboardRaw(requestParameters: DeleteDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebServiceDashboard>>;
    /**
     * Delete a dashboard by id
     */
    deleteDashboard(requestParameters: DeleteDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebServiceDashboard>;
    /**
     * Export a dashboard to json
     */
    exportDashboardRaw(requestParameters: ExportDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebServiceExportDashboardResponse>>;
    /**
     * Export a dashboard to json
     */
    exportDashboard(requestParameters: ExportDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebServiceExportDashboardResponse>;
    /**
     * Get a dashboard by id
     */
    getDashboardRaw(requestParameters: GetDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebServiceGetDashboardResponse>>;
    /**
     * Get a dashboard by id
     */
    getDashboard(requestParameters: GetDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebServiceGetDashboardResponse>;
    /**
     * Get a dashboard by id
     */
    getDashboard2Raw(requestParameters: GetDashboard2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebServiceGetDashboardResponse>>;
    /**
     * Get a dashboard by id
     */
    getDashboard2(requestParameters: GetDashboard2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebServiceGetDashboardResponse>;
    /**
     * Get project details
     */
    getProjectRaw(requestParameters: GetProjectRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebServiceGetProjectResponse>>;
    /**
     * Get project details
     */
    getProject(requestParameters: GetProjectRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebServiceGetProjectResponse>;
    /**
     * Get project list
     */
    getProjectListRaw(requestParameters: GetProjectListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebServiceGetProjectListResponse>>;
    /**
     * Get project list
     */
    getProjectList(requestParameters?: GetProjectListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebServiceGetProjectListResponse>;
    /**
     * Import a dashboard to another dashboard
     */
    importDashboardRaw(requestParameters: ImportDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebServiceImportDashboardResponse>>;
    /**
     * Import a dashboard to another dashboard
     */
    importDashboard(requestParameters: ImportDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebServiceImportDashboardResponse>;
    /**
     * List all dashboards in a project
     */
    listDashboardsRaw(requestParameters: ListDashboardsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebServiceGetDashboardResponse>>;
    /**
     * List all dashboards in a project
     */
    listDashboards(requestParameters?: ListDashboardsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebServiceGetDashboardResponse>;
    /**
     * List all dashboards in a project
     */
    listDashboards2Raw(requestParameters: ListDashboards2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebServiceGetDashboardResponse>>;
    /**
     * List all dashboards in a project
     */
    listDashboards2(requestParameters: ListDashboards2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebServiceGetDashboardResponse>;
}
