import { RecordMetaData } from '@sentio/protos';
import { type Labels } from '../index.js';
import { MoveCoder } from './index.js';
import { Aptos, Event, MoveResource, UserTransactionResponse, MoveModuleBytecode } from '@aptos-labs/ts-sdk';
import { AptosNetwork } from './network.js';
import { MoveAccountContext, MoveContext } from '../move/index.js';
export declare class AptosContext extends MoveContext<AptosNetwork, MoveModuleBytecode, Event | MoveResource> {
    moduleName: string;
    version: bigint;
    transaction: UserTransactionResponse;
    eventIndex: number;
    coder: MoveCoder;
    constructor(moduleName: string, network: AptosNetwork, address: string, version: bigint, transaction: UserTransactionResponse | null, eventIndex: number, baseLabels: Labels | undefined);
    getChainId(): import("@sentio/chain").AptosChainId;
    getTimestamp(): number;
    getMetaDataInternal(name: string, labels: Labels): RecordMetaData;
    getClient(): Aptos;
}
export declare class AptosResourcesContext extends MoveAccountContext<AptosNetwork, MoveModuleBytecode, Event | MoveResource> {
    version: bigint;
    timestampInMicros: number;
    coder: MoveCoder;
    constructor(network: AptosNetwork, address: string, version: bigint, timestampInMicros: number, baseLabels?: Labels);
    getChainId(): import("@sentio/chain").AptosChainId;
    getTimestamp(): number;
    getMetaDataInternal(name: string, labels: Labels): RecordMetaData;
    getClient(): Aptos;
}
//# sourceMappingURL=context.d.ts.map