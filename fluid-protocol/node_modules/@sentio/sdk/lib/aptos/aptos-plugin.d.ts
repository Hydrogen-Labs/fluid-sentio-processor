import { Plugin } from '@sentio/runtime';
import { Data_AptCall, Data_AptEvent, Data_AptResource, DataBinding, HandlerType, ProcessConfigResponse, ProcessResult, StartRequest } from '@sentio/protos';
interface Handlers {
    aptosEventHandlers: ((event: Data_AptEvent) => Promise<ProcessResult>)[];
    aptosCallHandlers: ((func: Data_AptCall) => Promise<ProcessResult>)[];
    aptosResourceHandlers: ((resourceWithVersion: Data_AptResource) => Promise<ProcessResult>)[];
}
export declare class AptosPlugin extends Plugin {
    name: string;
    handlers: Handlers;
    start(request: StartRequest): Promise<void>;
    configure(config: ProcessConfigResponse): Promise<void>;
    supportedHandlers: HandlerType[];
    processBinding(request: DataBinding): Promise<ProcessResult>;
    processAptosEvent(binding: DataBinding): Promise<ProcessResult>;
    processAptosResource(binding: DataBinding): Promise<ProcessResult>;
    processAptosFunctionCall(binding: DataBinding): Promise<ProcessResult>;
}
export {};
//# sourceMappingURL=aptos-plugin.d.ts.map