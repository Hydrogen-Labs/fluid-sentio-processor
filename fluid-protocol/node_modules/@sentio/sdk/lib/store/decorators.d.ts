import 'reflect-metadata';
import { ValueConverter } from './convert.js';
import { RichStruct } from '@sentio/protos';
type Constructor = {
    new (...args: any[]): any;
};
export declare function Entity(entityName: string): <T extends Constructor>(BaseClass: T) => {
    new (...args: any[]): {
        [x: string]: any;
        readonly _data: RichStruct;
    };
    entityName: string;
} & T;
export declare function Column(type: string): (target: any, propertyKey: string) => void;
export declare function ListColumn(type?: string): (target: any, propertyKey: string) => void;
export declare function column(type?: ValueConverter<any>): (target: any, propertyKey: string) => void;
export declare const IDColumn: (target: any, propertyKey: string) => void;
export declare const IntColumn: (target: any, propertyKey: string) => void;
export declare const FloatColumn: (target: any, propertyKey: string) => void;
export declare const BigDecimalColumn: (target: any, propertyKey: string) => void;
export declare const BigIntColumn: (target: any, propertyKey: string) => void;
export declare const StringColumn: (target: any, propertyKey: string) => void;
export declare const BooleanColumn: (target: any, propertyKey: string) => void;
export declare const TimestampColumn: (target: any, propertyKey: string) => void;
export declare const BytesColumn: (target: any, propertyKey: string) => void;
export declare function Required(target: any, propertyKey: string): void;
export declare function One(entity: string): (target: any, propertyKey: string) => void;
export declare function Many(entity: string): (target: any, propertyKey: string) => void;
export {};
//# sourceMappingURL=decorators.d.ts.map