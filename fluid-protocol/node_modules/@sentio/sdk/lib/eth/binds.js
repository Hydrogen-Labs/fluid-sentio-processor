import { getOptionsSignature } from './bind-options.js';
import { MapStateStorage } from '@sentio/runtime';
export class EthProcessorState extends MapStateStorage {
    static INSTANCE = new EthProcessorState();
}
// from abiName_address_chainId => contract wrapper
const contracts = new Map();
function getKey(abiName, address, network) {
    return [abiName, address.toLowerCase(), network].join('_');
}
// Dedup processor that bind multiple times
export function getProcessor(opts) {
    const sig = getOptionsSignature(opts);
    return EthProcessorState.INSTANCE.getValue(sig);
}
export function addProcessor(opts, processor) {
    const sig = getOptionsSignature(opts);
    EthProcessorState.INSTANCE.getOrSetValue(sig, processor);
}
export function getContractByABI(abiName, address, network) {
    const key = getKey(abiName, address, network);
    return contracts.get(key);
}
export function addContractByABI(abiName, address, network, contract) {
    const key = getKey(abiName, address, network);
    return contracts.set(key, contract);
}
//# sourceMappingURL=binds.js.map