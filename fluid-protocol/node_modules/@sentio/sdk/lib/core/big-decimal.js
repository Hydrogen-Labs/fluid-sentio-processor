import { BigDecimal } from '@sentio/bigdecimal';
import { BN } from 'fuels';
export { BigDecimal } from '@sentio/bigdecimal';
BigInt.prototype.asBigDecimal = function () {
    return new BigDecimal(this.toString());
};
BigInt.prototype.scaleDown = function (decimal) {
    // @ts-ignore this is fine
    return scaleDown(this, decimal);
};
BN.prototype.asBigDecimal = function () {
    return new BigDecimal(this.toString(10));
};
BN.prototype.scaleDown = function (decimal) {
    return scaleDown(BigInt(this.toString(10)), decimal);
};
export function scaleDown(amount, decimal) {
    const divider = new BigDecimal(10).pow(Number(decimal));
    return amount.asBigDecimal().dividedBy(divider);
}
//# sourceMappingURL=big-decimal.js.map