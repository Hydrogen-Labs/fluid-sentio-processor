import { ProcessResult, RecordMetaData } from '@sentio/protos';
import { EventLoggerBinding } from './event-logger.js';
import { Meter, Labels } from './meter.js';
import { ChainId } from '@sentio/chain';
import { Store } from '../store/store.js';
export declare abstract class BaseContext {
    meter: Meter;
    eventLogger: EventLoggerBinding;
    private _store;
    baseLabels: Labels;
    private active;
    private _res;
    update(res: Partial<ProcessResult>): void;
    protected constructor(baseLabels: Labels | undefined);
    stopAndGetResult(): ProcessResult;
    private metadataCache;
    getMetaData(name: string, labels: Labels): RecordMetaData;
    protected abstract getMetaDataInternal(name: string, labels: Labels): RecordMetaData;
    abstract getChainId(): ChainId;
    get store(): Store;
    initStore(): void;
}
//# sourceMappingURL=base-context.d.ts.map