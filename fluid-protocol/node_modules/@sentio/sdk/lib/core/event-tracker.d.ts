import { BaseContext } from './base-context.js';
import { MapStateStorage } from '@sentio/runtime';
import { NamedResultDescriptor } from './metadata.js';
import { Event } from './event-logger.js';
export interface TrackerOptions {
    totalByDay?: boolean;
    unique?: boolean;
    distinctByDays?: number[];
}
/** @deprecated */
export declare class EventTrackerState extends MapStateStorage<EventTracker> {
    static INSTANCE: EventTrackerState;
}
/** @deprecated */
export declare class EventTracker extends NamedResultDescriptor {
    static DEFAULT_OPTIONS: TrackerOptions;
    static register(eventName: string, options?: TrackerOptions): EventTracker;
    options: TrackerOptions;
    protected constructor(eventName: string, options: TrackerOptions);
    trackEvent<T>(ctx: BaseContext, event: Event<T>): void;
}
/** @deprecated */
export declare class AccountEventTracker extends EventTracker {
    static DEFAULT_OPTIONS: TrackerOptions;
    static register(eventName?: string, options?: TrackerOptions): EventTracker;
}
//# sourceMappingURL=event-tracker.d.ts.map