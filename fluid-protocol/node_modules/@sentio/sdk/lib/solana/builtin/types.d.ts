import { Infer } from "superstruct_solana";
export declare const PublicKeyFromString: import("superstruct_solana").Struct<String, null>;
export type TokenAmountUi = Infer<typeof TokenAmountUi>;
export type MintTo = Infer<typeof MintTo>;
export type Burn = Infer<typeof Burn>;
export type InitializeMint = Infer<typeof InitializeMint>;
export type InitializeAccount = Infer<typeof InitializeAccount>;
export type InitializeAccount2 = Infer<typeof InitializeAccount2>;
export type InitializeAccount3 = Infer<typeof InitializeAccount3>;
export type InitializeMultisig = Infer<typeof InitializeMultisig>;
export declare const TokenAmountUi: import("superstruct_solana").Struct<{
    decimals: number;
    amount: string;
    uiAmountString: string;
}, {
    amount: import("superstruct_solana").Struct<string, null>;
    decimals: import("superstruct_solana").Struct<number, null>;
    uiAmountString: import("superstruct_solana").Struct<string, null>;
}>;
declare const InitializeMint: import("superstruct_solana").Struct<{
    decimals: number;
    mint: String;
    mintAuthority: String;
    rentSysvar: String;
    freezeAuthority?: String | undefined;
}, {
    mint: import("superstruct_solana").Struct<String, null>;
    decimals: import("superstruct_solana").Struct<number, null>;
    mintAuthority: import("superstruct_solana").Struct<String, null>;
    rentSysvar: import("superstruct_solana").Struct<String, null>;
    freezeAuthority: import("superstruct_solana").Struct<String | undefined, null>;
}>;
declare const InitializeAccount: import("superstruct_solana").Struct<{
    account: String;
    owner: String;
    mint: String;
    rentSysvar: String;
}, {
    account: import("superstruct_solana").Struct<String, null>;
    mint: import("superstruct_solana").Struct<String, null>;
    owner: import("superstruct_solana").Struct<String, null>;
    rentSysvar: import("superstruct_solana").Struct<String, null>;
}>;
declare const InitializeAccount2: import("superstruct_solana").Struct<{
    account: String;
    owner: String;
    mint: String;
    rentSysvar: String;
}, {
    account: import("superstruct_solana").Struct<String, null>;
    mint: import("superstruct_solana").Struct<String, null>;
    rentSysvar: import("superstruct_solana").Struct<String, null>;
    owner: import("superstruct_solana").Struct<String, null>;
}>;
declare const InitializeAccount3: import("superstruct_solana").Struct<{
    account: String;
    owner: String;
    mint: String;
}, {
    account: import("superstruct_solana").Struct<String, null>;
    mint: import("superstruct_solana").Struct<String, null>;
    owner: import("superstruct_solana").Struct<String, null>;
}>;
declare const InitializeMultisig: import("superstruct_solana").Struct<{
    signers: String[];
    rentSysvar: String;
    multisig: String;
    m: number;
}, {
    multisig: import("superstruct_solana").Struct<String, null>;
    rentSysvar: import("superstruct_solana").Struct<String, null>;
    signers: import("superstruct_solana").Struct<String[], import("superstruct_solana").Struct<String, null>>;
    m: import("superstruct_solana").Struct<number, null>;
}>;
export type Transfer = Infer<typeof Transfer>;
export declare const Transfer: import("superstruct_solana").Struct<{
    amount: string | number;
    source: String;
    destination: String;
    signers?: String[] | undefined;
    authority?: String | undefined;
    multisigAuthority?: String | undefined;
}, {
    source: import("superstruct_solana").Struct<String, null>;
    destination: import("superstruct_solana").Struct<String, null>;
    amount: import("superstruct_solana").Struct<string | number, null>;
    authority: import("superstruct_solana").Struct<String | undefined, null>;
    multisigAuthority: import("superstruct_solana").Struct<String | undefined, null>;
    signers: import("superstruct_solana").Struct<String[] | undefined, import("superstruct_solana").Struct<String, null>>;
}>;
export type Approve = Infer<typeof Approve>;
declare const Approve: import("superstruct_solana").Struct<{
    amount: string | number;
    source: String;
    delegate: String;
    owner?: String | undefined;
    signers?: String[] | undefined;
    multisigOwner?: String | undefined;
}, {
    source: import("superstruct_solana").Struct<String, null>;
    delegate: import("superstruct_solana").Struct<String, null>;
    amount: import("superstruct_solana").Struct<string | number, null>;
    owner: import("superstruct_solana").Struct<String | undefined, null>;
    multisigOwner: import("superstruct_solana").Struct<String | undefined, null>;
    signers: import("superstruct_solana").Struct<String[] | undefined, import("superstruct_solana").Struct<String, null>>;
}>;
export type Revoke = Infer<typeof Revoke>;
declare const Revoke: import("superstruct_solana").Struct<{
    source: String;
    owner?: String | undefined;
    signers?: String[] | undefined;
    multisigOwner?: String | undefined;
}, {
    source: import("superstruct_solana").Struct<String, null>;
    owner: import("superstruct_solana").Struct<String | undefined, null>;
    multisigOwner: import("superstruct_solana").Struct<String | undefined, null>;
    signers: import("superstruct_solana").Struct<String[] | undefined, import("superstruct_solana").Struct<String, null>>;
}>;
export type SetAuthority = Infer<typeof SetAuthority>;
declare const SetAuthority: import("superstruct_solana").Struct<{
    authorityType: "mintTokens" | "freezeAccount" | "accountOwner" | "closeAccount";
    newAuthority: String | null;
    account?: String | undefined;
    mint?: String | undefined;
    signers?: String[] | undefined;
    authority?: String | undefined;
    multisigAuthority?: String | undefined;
}, {
    mint: import("superstruct_solana").Struct<String | undefined, null>;
    account: import("superstruct_solana").Struct<String | undefined, null>;
    authorityType: import("superstruct_solana").Struct<"mintTokens" | "freezeAccount" | "accountOwner" | "closeAccount", {
        mintTokens: "mintTokens";
        freezeAccount: "freezeAccount";
        accountOwner: "accountOwner";
        closeAccount: "closeAccount";
    }>;
    newAuthority: import("superstruct_solana").Struct<String | null, null>;
    authority: import("superstruct_solana").Struct<String | undefined, null>;
    multisigAuthority: import("superstruct_solana").Struct<String | undefined, null>;
    signers: import("superstruct_solana").Struct<String[] | undefined, import("superstruct_solana").Struct<String, null>>;
}>;
declare const MintTo: import("superstruct_solana").Struct<{
    account: String;
    amount: string | number;
    mint: String;
    mintAuthority?: String | undefined;
    multisigMintAuthority?: String | undefined;
    signers?: String[] | undefined;
}, {
    mint: import("superstruct_solana").Struct<String, null>;
    account: import("superstruct_solana").Struct<String, null>;
    amount: import("superstruct_solana").Struct<string | number, null>;
    mintAuthority: import("superstruct_solana").Struct<String | undefined, null>;
    multisigMintAuthority: import("superstruct_solana").Struct<String | undefined, null>;
    signers: import("superstruct_solana").Struct<String[] | undefined, import("superstruct_solana").Struct<String, null>>;
}>;
declare const Burn: import("superstruct_solana").Struct<{
    account: String;
    amount: string | number;
    mint: String;
    signers?: String[] | undefined;
    authority?: String | undefined;
    multisigAuthority?: String | undefined;
}, {
    account: import("superstruct_solana").Struct<String, null>;
    mint: import("superstruct_solana").Struct<String, null>;
    amount: import("superstruct_solana").Struct<string | number, null>;
    authority: import("superstruct_solana").Struct<String | undefined, null>;
    multisigAuthority: import("superstruct_solana").Struct<String | undefined, null>;
    signers: import("superstruct_solana").Struct<String[] | undefined, import("superstruct_solana").Struct<String, null>>;
}>;
declare const CloseAccount: import("superstruct_solana").Struct<{
    account: String;
    destination: String;
    owner?: String | undefined;
    signers?: String[] | undefined;
    multisigOwner?: String | undefined;
}, {
    account: import("superstruct_solana").Struct<String, null>;
    destination: import("superstruct_solana").Struct<String, null>;
    owner: import("superstruct_solana").Struct<String | undefined, null>;
    multisigOwner: import("superstruct_solana").Struct<String | undefined, null>;
    signers: import("superstruct_solana").Struct<String[] | undefined, import("superstruct_solana").Struct<String, null>>;
}>;
export type CloseAccount = Infer<typeof CloseAccount>;
export type FreezeAccount = Infer<typeof FreezeAccount>;
declare const FreezeAccount: import("superstruct_solana").Struct<{
    account: String;
    mint: String;
    signers?: String[] | undefined;
    freezeAuthority?: String | undefined;
    multisigFreezeAuthority?: String | undefined;
}, {
    account: import("superstruct_solana").Struct<String, null>;
    mint: import("superstruct_solana").Struct<String, null>;
    freezeAuthority: import("superstruct_solana").Struct<String | undefined, null>;
    multisigFreezeAuthority: import("superstruct_solana").Struct<String | undefined, null>;
    signers: import("superstruct_solana").Struct<String[] | undefined, import("superstruct_solana").Struct<String, null>>;
}>;
export type ThawAccount = Infer<typeof ThawAccount>;
declare const ThawAccount: import("superstruct_solana").Struct<{
    account: String;
    mint: String;
    signers?: String[] | undefined;
    freezeAuthority?: String | undefined;
    multisigFreezeAuthority?: String | undefined;
}, {
    account: import("superstruct_solana").Struct<String, null>;
    mint: import("superstruct_solana").Struct<String, null>;
    freezeAuthority: import("superstruct_solana").Struct<String | undefined, null>;
    multisigFreezeAuthority: import("superstruct_solana").Struct<String | undefined, null>;
    signers: import("superstruct_solana").Struct<String[] | undefined, import("superstruct_solana").Struct<String, null>>;
}>;
export type TransferChecked = Infer<typeof TransferChecked>;
export declare const TransferChecked: import("superstruct_solana").Struct<{
    mint: String;
    source: String;
    destination: String;
    tokenAmount: {
        decimals: number;
        amount: string;
        uiAmountString: string;
    };
    signers?: String[] | undefined;
    authority?: String | undefined;
    multisigAuthority?: String | undefined;
}, {
    source: import("superstruct_solana").Struct<String, null>;
    mint: import("superstruct_solana").Struct<String, null>;
    destination: import("superstruct_solana").Struct<String, null>;
    authority: import("superstruct_solana").Struct<String | undefined, null>;
    multisigAuthority: import("superstruct_solana").Struct<String | undefined, null>;
    signers: import("superstruct_solana").Struct<String[] | undefined, import("superstruct_solana").Struct<String, null>>;
    tokenAmount: import("superstruct_solana").Struct<{
        decimals: number;
        amount: string;
        uiAmountString: string;
    }, {
        amount: import("superstruct_solana").Struct<string, null>;
        decimals: import("superstruct_solana").Struct<number, null>;
        uiAmountString: import("superstruct_solana").Struct<string, null>;
    }>;
}>;
export type ApproveChecked = Infer<typeof ApproveChecked>;
declare const ApproveChecked: import("superstruct_solana").Struct<{
    mint: String;
    source: String;
    delegate: String;
    tokenAmount: {
        decimals: number;
        amount: string;
        uiAmountString: string;
    };
    owner?: String | undefined;
    signers?: String[] | undefined;
    multisigOwner?: String | undefined;
}, {
    source: import("superstruct_solana").Struct<String, null>;
    mint: import("superstruct_solana").Struct<String, null>;
    delegate: import("superstruct_solana").Struct<String, null>;
    owner: import("superstruct_solana").Struct<String | undefined, null>;
    multisigOwner: import("superstruct_solana").Struct<String | undefined, null>;
    signers: import("superstruct_solana").Struct<String[] | undefined, import("superstruct_solana").Struct<String, null>>;
    tokenAmount: import("superstruct_solana").Struct<{
        decimals: number;
        amount: string;
        uiAmountString: string;
    }, {
        amount: import("superstruct_solana").Struct<string, null>;
        decimals: import("superstruct_solana").Struct<number, null>;
        uiAmountString: import("superstruct_solana").Struct<string, null>;
    }>;
}>;
export type MintToChecked = Infer<typeof MintToChecked>;
declare const MintToChecked: import("superstruct_solana").Struct<{
    account: String;
    mint: String;
    tokenAmount: {
        decimals: number;
        amount: string;
        uiAmountString: string;
    };
    mintAuthority?: String | undefined;
    multisigMintAuthority?: String | undefined;
    signers?: String[] | undefined;
}, {
    account: import("superstruct_solana").Struct<String, null>;
    mint: import("superstruct_solana").Struct<String, null>;
    mintAuthority: import("superstruct_solana").Struct<String | undefined, null>;
    multisigMintAuthority: import("superstruct_solana").Struct<String | undefined, null>;
    signers: import("superstruct_solana").Struct<String[] | undefined, import("superstruct_solana").Struct<String, null>>;
    tokenAmount: import("superstruct_solana").Struct<{
        decimals: number;
        amount: string;
        uiAmountString: string;
    }, {
        amount: import("superstruct_solana").Struct<string, null>;
        decimals: import("superstruct_solana").Struct<number, null>;
        uiAmountString: import("superstruct_solana").Struct<string, null>;
    }>;
}>;
export type BurnChecked = Infer<typeof BurnChecked>;
declare const BurnChecked: import("superstruct_solana").Struct<{
    account: String;
    mint: String;
    tokenAmount: {
        decimals: number;
        amount: string;
        uiAmountString: string;
    };
    signers?: String[] | undefined;
    authority?: String | undefined;
    multisigAuthority?: String | undefined;
}, {
    account: import("superstruct_solana").Struct<String, null>;
    mint: import("superstruct_solana").Struct<String, null>;
    authority: import("superstruct_solana").Struct<String | undefined, null>;
    multisigAuthority: import("superstruct_solana").Struct<String | undefined, null>;
    signers: import("superstruct_solana").Struct<String[] | undefined, import("superstruct_solana").Struct<String, null>>;
    tokenAmount: import("superstruct_solana").Struct<{
        decimals: number;
        amount: string;
        uiAmountString: string;
    }, {
        amount: import("superstruct_solana").Struct<string, null>;
        decimals: import("superstruct_solana").Struct<number, null>;
        uiAmountString: import("superstruct_solana").Struct<string, null>;
    }>;
}>;
export type SyncNative = Infer<typeof BurnChecked>;
export type GetAccountDataSize = Infer<typeof GetAccountDataSize>;
declare const GetAccountDataSize: import("superstruct_solana").Struct<{
    mint: String;
    extensionTypes?: string[] | undefined;
}, {
    mint: import("superstruct_solana").Struct<String, null>;
    extensionTypes: import("superstruct_solana").Struct<string[] | undefined, import("superstruct_solana").Struct<string, null>>;
}>;
export type InitializeImmutableOwner = Infer<typeof InitializeImmutableOwner>;
declare const InitializeImmutableOwner: import("superstruct_solana").Struct<{
    account: String;
}, {
    account: import("superstruct_solana").Struct<String, null>;
}>;
export type AmountToUiAmount = Infer<typeof AmountToUiAmount>;
declare const AmountToUiAmount: import("superstruct_solana").Struct<{
    amount: string | number;
    mint: String;
}, {
    mint: import("superstruct_solana").Struct<String, null>;
    amount: import("superstruct_solana").Struct<string | number, null>;
}>;
export type UiAmountToAmount = Infer<typeof UiAmountToAmount>;
declare const UiAmountToAmount: import("superstruct_solana").Struct<{
    mint: String;
    uiAmount: string;
}, {
    mint: import("superstruct_solana").Struct<String, null>;
    uiAmount: import("superstruct_solana").Struct<string, null>;
}>;
export type InitializeMintCloseAuthority = Infer<typeof InitializeMintCloseAuthority>;
declare const InitializeMintCloseAuthority: import("superstruct_solana").Struct<{
    mint: String;
    newAuthority: String;
}, {
    mint: import("superstruct_solana").Struct<String, null>;
    newAuthority: import("superstruct_solana").Struct<String, null>;
}>;
export type TransferFeeExtension = Infer<typeof TransferFeeExtension>;
declare const TransferFeeExtension: import("superstruct_solana").Struct<{
    mint: String;
    transferFeeConfigAuthority: String;
    withdrawWitheldAuthority: String;
    transferFeeBasisPoints: number;
    maximumFee: number;
}, {
    mint: import("superstruct_solana").Struct<String, null>;
    transferFeeConfigAuthority: import("superstruct_solana").Struct<String, null>;
    withdrawWitheldAuthority: import("superstruct_solana").Struct<String, null>;
    transferFeeBasisPoints: import("superstruct_solana").Struct<number, null>;
    maximumFee: import("superstruct_solana").Struct<number, null>;
}>;
export type DefaultAccountStateExtension = Infer<typeof DefaultAccountStateExtension>;
declare const DefaultAccountStateExtension: import("superstruct_solana").Struct<{
    mint: String;
    accountState: string;
    freezeAuthority?: String | undefined;
}, {
    mint: import("superstruct_solana").Struct<String, null>;
    accountState: import("superstruct_solana").Struct<string, null>;
    freezeAuthority: import("superstruct_solana").Struct<String | undefined, null>;
}>;
export type Reallocate = Infer<typeof Reallocate>;
declare const Reallocate: import("superstruct_solana").Struct<{
    account: String;
    extensionTypes: string[];
    payer: String;
    systemProgram: String;
}, {
    account: import("superstruct_solana").Struct<String, null>;
    payer: import("superstruct_solana").Struct<String, null>;
    systemProgram: import("superstruct_solana").Struct<String, null>;
    extensionTypes: import("superstruct_solana").Struct<string[], import("superstruct_solana").Struct<string, null>>;
}>;
export type MemoTransferExtension = Infer<typeof MemoTransferExtension>;
declare const MemoTransferExtension: import("superstruct_solana").Struct<{
    account: String;
    owner?: String | undefined;
    signers?: String[] | undefined;
    multisigOwner?: String | undefined;
}, {
    account: import("superstruct_solana").Struct<String, null>;
    owner: import("superstruct_solana").Struct<String | undefined, null>;
    multisigOwner: import("superstruct_solana").Struct<String | undefined, null>;
    signers: import("superstruct_solana").Struct<String[] | undefined, import("superstruct_solana").Struct<String, null>>;
}>;
export type CreateNativeMint = Infer<typeof CreateNativeMint>;
declare const CreateNativeMint: import("superstruct_solana").Struct<{
    payer: String;
    systemProgram: String;
    nativeMint: String;
}, {
    payer: import("superstruct_solana").Struct<String, null>;
    nativeMint: import("superstruct_solana").Struct<String, null>;
    systemProgram: import("superstruct_solana").Struct<String, null>;
}>;
export {};
//# sourceMappingURL=types.d.ts.map