import { normalizeLabels } from '../index.js';
import { getClient } from './network.js';
import { defaultMoveCoder } from './move-coder.js';
import { MoveAccountContext, MoveContext } from '../move/index.js';
export class SuiContext extends MoveContext {
    moduleName;
    timestamp;
    checkpoint;
    transaction;
    eventIndex;
    coder;
    constructor(moduleName, network, address, timestamp, checkpoint, transaction, eventIndex, baseLabels) {
        super(baseLabels);
        this.address = address.toLowerCase();
        this.network = network;
        this.moduleName = moduleName;
        this.timestamp = timestamp;
        this.checkpoint = checkpoint;
        this.eventIndex = eventIndex;
        this.coder = defaultMoveCoder(network);
        if (transaction) {
            this.transaction = transaction;
        }
    }
    getChainId() {
        return this.network;
    }
    getTimestamp() {
        return this.timestamp.getDate();
    }
    getMetaDataInternal(name, labels) {
        return {
            address: this.address,
            contractName: this.moduleName,
            blockNumber: this.checkpoint,
            transactionIndex: 0,
            transactionHash: this.transaction?.digest || '', // TODO
            logIndex: this.eventIndex,
            chainId: this.getChainId(),
            name: name,
            labels: normalizeLabels(labels)
        };
    }
    get client() {
        return getClient(this.network);
    }
}
export class SuiObjectChangeContext extends MoveContext {
    timestamp;
    checkpoint;
    coder;
    txDigest;
    constructor(network, address, timestamp, checkpoint, txDigest, baseLabels) {
        super(baseLabels);
        this.address = address;
        this.network = network;
        this.timestamp = timestamp;
        this.checkpoint = checkpoint;
        this.txDigest = txDigest;
        this.coder = defaultMoveCoder(network);
    }
    getChainId() {
        return this.network;
    }
    getTimestamp() {
        return this.timestamp.getDate();
    }
    getMetaDataInternal(name, labels) {
        return {
            address: this.address,
            contractName: '*',
            blockNumber: this.checkpoint,
            transactionIndex: -1,
            transactionHash: this.txDigest,
            logIndex: 0,
            chainId: this.getChainId(),
            name: name,
            labels: normalizeLabels(labels)
        };
    }
    get client() {
        return getClient(this.network);
    }
}
// TODO address handler should use this context
export class SuiAddressContext extends MoveAccountContext {
    address;
    network;
    checkpoint;
    timestamp;
    coder;
    contractName = 'address';
    constructor(network, address, checkpoint, timestamp, baseLabels) {
        super(baseLabels);
        this.address = address;
        this.network = network;
        this.checkpoint = checkpoint;
        this.timestamp = timestamp;
        this.coder = defaultMoveCoder(network);
    }
    getChainId() {
        return this.network;
    }
    getMetaDataInternal(name, labels) {
        return {
            address: this.address,
            contractName: this.contractName,
            blockNumber: this.checkpoint,
            transactionIndex: 0,
            transactionHash: '',
            logIndex: 0,
            chainId: this.getChainId(),
            name: name,
            labels: normalizeLabels(labels)
        };
    }
    get client() {
        return getClient(this.network);
    }
    getTimestamp() {
        return this.timestamp.getDate();
    }
}
export class SuiObjectContext extends SuiAddressContext {
    contractName = 'object';
    objectId;
    constructor(network, objectId, checkpoint, timestamp, baseLabels) {
        super(network, objectId, checkpoint, timestamp, baseLabels);
        this.objectId = objectId;
    }
}
//# sourceMappingURL=context.js.map