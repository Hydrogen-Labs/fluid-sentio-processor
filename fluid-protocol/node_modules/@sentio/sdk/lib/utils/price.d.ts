import { CoinID } from '@sentio/protos';
import { ChainId } from '@sentio/chain';
import { PriceApi } from '@sentio/api';
export declare function getPriceClient(basePath?: string): PriceApi;
interface PriceOptions {
    toleranceInDays?: number;
}
export declare function getPriceByTypeOrSymbolInternal(priceClient: PriceApi, date: Date, coinId: CoinID, options?: PriceOptions): Promise<number | undefined>;
/**
 *
 * @param chainId chain id refers to CHAIN_MAP
 * @param coinType
 * @param date
 * @param options other behavior options
 */
export declare function getPriceByType(chainId: ChainId, coinType: string, date: Date, options?: PriceOptions): Promise<number | undefined>;
/**
 * @param symbol token symbol like BTC, etc
 * @param date
 * @param options other behavior options
 */
export declare function getPriceBySymbol(symbol: string, date: Date, options?: PriceOptions): Promise<number | undefined>;
/**
 * get coins that has price, return results are list of coin id with both symbol and address field set
 * @param chainId
 */
export declare function getCoinsThatHasPrice(chainId: ChainId): Promise<import("@sentio/api").PriceServiceCoinID[]>;
export {};
//# sourceMappingURL=price.d.ts.map