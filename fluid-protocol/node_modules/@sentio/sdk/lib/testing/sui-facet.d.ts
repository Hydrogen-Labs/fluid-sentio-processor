import { SuiTransactionBlockResponse } from '@mysten/sui.js/client';
import { TestProcessorServer } from './test-processor-server.js';
import { SuiNetwork } from '../sui/index.js';
export declare class SuiFacet {
    server: TestProcessorServer;
    constructor(server: TestProcessorServer);
    testEntryFunctionCall(transaction: SuiTransactionBlockResponse, network?: SuiNetwork): Promise<import("@sentio/protos").ProcessBindingResponse>;
    testEntryFunctionCalls(transactions: SuiTransactionBlockResponse[], network?: SuiNetwork): Promise<import("@sentio/protos").ProcessBindingResponse>;
    private buildEntryFunctionCallBinding;
    testEvent(transaction: SuiTransactionBlockResponse, network?: SuiNetwork): Promise<import("@sentio/protos").ProcessBindingResponse>;
    testGlobalTransaction(transaction: SuiTransactionBlockResponse, network?: SuiNetwork): Promise<import("@sentio/protos").ProcessBindingResponse>;
    private buildEventBinding;
}
//# sourceMappingURL=sui-facet.d.ts.map