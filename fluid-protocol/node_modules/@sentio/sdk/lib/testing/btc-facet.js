import { HandlerType } from '@sentio/protos';
import { BTCChainId } from '@sentio/chain';
import '../btc/btc-plugin.js';
export class BTCFacet {
    server;
    constructor(server) {
        this.server = server;
    }
    testOnTransactions(events, network = BTCChainId.BTC_TESTNET) {
        const bindings = this.buildBinding(events, network);
        if (!bindings) {
            throw Error('Invalid test : ' + JSON.stringify(events));
        }
        return this.server.processBindings({
            bindings
        });
    }
    buildBinding(data, network) {
        const res = [];
        for (const config of this.server.contractConfigs) {
            if (config.contract?.chainId !== network) {
                continue;
            }
            for (const txConfig of config.btcTransactionConfigs) {
                const binding = {
                    data: {
                        btcTransaction: data
                    },
                    handlerIds: [txConfig.handlerId],
                    handlerType: HandlerType.BTC_TRANSACTION
                };
                res.push(binding);
            }
        }
        return res;
    }
}
//# sourceMappingURL=btc-facet.js.map