import { ChainId } from '@sentio/chain';
import { RecordMetaData } from '@sentio/protos';
import { BaseContext, Labels } from '../core/index.js';
import { Provider, RpcProvider } from 'starknet';
import { StarknetProcessorConfig } from './types.js';
import { Abi } from '@sentio/abi-wan-kanabi';
declare class AbstractContext extends BaseContext {
    readonly provider: Provider;
    readonly contractAddress: string;
    readonly chainId: ChainId | string;
    readonly blockNumber: number;
    readonly blockHash: string;
    readonly transactionHash: string;
    readonly logIndex: number;
    readonly contractName: string;
    readonly abi?: Abi | undefined;
    constructor(provider: Provider, contractAddress: string, chainId: ChainId | string, blockNumber: number, blockHash: string, transactionHash: string, logIndex?: number, contractName?: string, abi?: Abi | undefined);
    protected getMetaDataInternal(name: string, labels: Labels): RecordMetaData;
    getChainId(): ChainId;
}
export declare class StarknetContext<CT> extends AbstractContext {
    readonly classHash: string;
    private _contract;
    constructor(config: StarknetProcessorConfig, provider: RpcProvider, blockNumber: number, blockHash: string, transaction_hash: string, logIndex: number, classHash: string);
    getContract(): CT;
}
export {};
//# sourceMappingURL=context.d.ts.map