import { InternalMoveModule, InternalMoveStruct } from './internal-models.js';
import { TypeDescriptor } from './types.js';
export declare abstract class ChainAdapter<ModuleType, StructType> {
    abstract getChainId(): Promise<string>;
    abstract fetchModule(account: string, module: string): Promise<ModuleType>;
    abstract fetchModules(account: string): Promise<ModuleType[]>;
    abstract toInternalModules(modules: ModuleType[]): InternalMoveModule[];
    abstract getAllEventStructs(module: InternalMoveModule[]): Map<string, InternalMoveStruct>;
    abstract getMeaningfulFunctionParams(params: TypeDescriptor[]): TypeDescriptor[];
    abstract getType(base: StructType): string;
    abstract getData<T>(base: StructType): any;
}
//# sourceMappingURL=chain-adapter.d.ts.map