import { InternalMoveFunction, InternalMoveModule, InternalMoveStruct } from './internal-models.js';
import { AccountRegister } from './account.js';
import { TypeDescriptor } from './types.js';
import { ChainAdapter } from './chain-adapter.js';
interface OutputFile {
    fileName: string;
    fileContent: string;
}
interface Config {
    fileName: string;
    outputDir: string;
}
export declare abstract class AbstractCodegen<ModuleTypes, StructType> {
    ADDRESS_TYPE: string;
    SYSTEM_PACKAGE: string;
    PREFIX: string;
    STRUCT_FIELD_NAME: string;
    PAYLOAD_OPTIONAL: boolean;
    SYSTEM_MODULES: Set<string>;
    ESM: boolean;
    chainAdapter: ChainAdapter<ModuleTypes, StructType>;
    protected constructor(chainAdapter: ChainAdapter<ModuleTypes, StructType>);
    maybeEsmPrefix(): "" | ".js";
    readModulesFile(fullPath: string): any;
    protected defaultCoderPackage(): string;
    generateLoadAll(isSystem: boolean): string;
    generate(srcDir: string, outputDir: string, builtin?: boolean): Promise<number>;
    protected generateExtra(address: string | undefined, module: InternalMoveModule): string;
    generateModule(module: InternalMoveModule, allEventStructs: Map<string, InternalMoveStruct>, addressOverride?: string): string;
    generateStructs(module: InternalMoveModule, struct: InternalMoveStruct, events: Set<string>, typeOnly?: boolean): string;
    generateFunctionTypeParameters(func: InternalMoveFunction): string;
    generateFunctionReturnTypeParameters(func: InternalMoveFunction, currentAddress: string): string;
    generateStructTypeParameters(struct: InternalMoveStruct, useAny?: boolean): string;
    generateCallArgsStructs(module: InternalMoveModule, func: InternalMoveFunction): string;
    generateForEvents(module: InternalMoveModule, struct: InternalMoveStruct): string;
    generateTypeForDescriptor(type: TypeDescriptor, currentAddress: string): string;
    generateSimpleType(type: string, currentAddress: string): string;
    generateImports(): string;
}
export declare class AccountCodegen<ModuleType, StructType> {
    modules: InternalMoveModule[];
    config: Config;
    abi: ModuleType[];
    loader: AccountRegister;
    moduleGen: AbstractCodegen<ModuleType, StructType>;
    address?: string;
    constructor(moduleGen: AbstractCodegen<ModuleType, StructType>, loader: AccountRegister, abi: ModuleType[], modules: InternalMoveModule[], config: Config, address: string | undefined);
    generate(): OutputFile[];
}
export {};
//# sourceMappingURL=abstract-codegen.d.ts.map