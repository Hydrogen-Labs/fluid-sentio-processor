import { SuiMoveNormalizedModule, SuiEvent, SuiMoveObject } from '@mysten/sui.js/client';
import { InternalMoveModule, InternalMoveStruct, AbstractCodegen, InternalMoveFunction } from '@typemove/move';
export declare function codegen(abisDir: string, outDir: string | undefined, endpoint: string, genExample?: boolean, builtin?: boolean): Promise<number>;
export declare class SuiCodegen extends AbstractCodegen<SuiMoveNormalizedModule, SuiEvent | SuiMoveObject> {
    ADDRESS_TYPE: string;
    SYSTEM_PACKAGE: string;
    PREFIX: string;
    PAYLOAD_OPTIONAL: boolean;
    constructor(endpoint: string);
    readModulesFile(fullPath: string): any;
    generateStructs(module: InternalMoveModule, struct: InternalMoveStruct, events: Set<string>): string;
    generateForEvents(module: InternalMoveModule, struct: InternalMoveStruct): string;
    protected generateExtra(address: string | undefined, module: InternalMoveModule): string;
    private generateArgs;
    protected generateViewFunction(module: InternalMoveModule, func: InternalMoveFunction): string;
    protected generateBuilderForFunction(address: string, module: InternalMoveModule, func: InternalMoveFunction): string;
    generateImports(): string;
}
//# sourceMappingURL=codegen.d.ts.map